--------------------------
Pressupostos do Dr. César:

// inicializacao do data_memory (provisorio)
data_mem[0x2000] = 32'h0005;
data_mem[0x2008] = 32'h000A;
data_mem[0x200C] = 32'h0001;

// inicializacao do reg_file (provisorio)
registers[0] <= 32'h0000;
registers[5] <= 32'h0006;
registers[9] <= 32'h2004;

// inicializacao do instructionMemory
$readmemh("C:/CI_Digital/Trabalho/Single-Cycle-RISC-V/instruction_memory/test_1.txt", rom);

----------------
Código assembly:

    lw  x1, 8(x9)   // x1 ← mem[0x200C] = 1
    lw  x2, -4(x9)  // x2 ← mem[0x2000] = 5
    lw  x3, 4(x9)   // x3 ← mem[0x2008] = 10

L1: sub x3, x3, x1  // x3 ← x3 - x1 (decrementa x3)
    slt x4, x2, x3  // x4 ← (x2 < x3)? 1 : 0
    beq x4, x0, L1  // se x2 >= x3, sai do loop

    add x5, x2, x1      // x5 ← 5 + 1 = 6
    and x6, x5, x0      // x6 ← 6 & 0 = 0
    or  x6, x5, x0      // x6 ← 6 | 0 = 6
    sw  x6, 0(x9)       // mem[0x2004] ← 6

-------------------------------------
Conversão para binário e hexadecimal:

    lw  x1, 8(x9)   // x1 ← mem[0x200C] = 1
    000000001000 01001 010 00001 0000011
    0084A083

    lw  x2, -4(x9)  // x2 ← mem[0x2000] = 5
    111111111100 01001 010 00010 0000011
    FFC4A103

    lw  x3, 4(x9)   // x3 ← mem[0x2008] = 10
    000000000100 01001 010 00011 0000011
    0044A183

L1: sub x3, x3, x1  // x3 ← x3 - x1 (decrementa x3)
    0100000 00001 00011 000 00011 0110011
    401181B3 

    slt x4, x2, x3  // x4 ← (x2 < x3)? 1 : 0
    0000000 00011 00010 010 00100 0110011
    00312233

    slt x4, x3, x2  // x4 ← (x2 < x3)? 1 : 0
    0000000 00010 00011 010 00100 0110011
    0021A233

    beq x4, x0, L1  // se x2 >= x3, sai do loop
    1111111 00000 00100 000 11001 1100011
    FE020CE3

    add x5, x2, x1      // x5 ← 5 + 1 = 6
    0000000 00001 00010 000 00101 0110011
    001102B3

    and x6, x5, x0      // x6 ← 6 & 0 = 0
    //func7 rs2   rs1   f3  rd    op
    0000000 00000 00101 111 00110 0110011
    0002F333

    or  x6, x5, x0      // x6 ← 6 | 0 = 6
    //func7 rs2   rs1   f3  rd    op
    0000000 00000 00101 110 00110 0110011
    0002E333

    sw  x6, 0(x9)       // mem[0x2004] ← 6
    //imm   rs2   rs1   f3  imm   op
    0000000 00110 01001 010 00000 0100011
    0064A023

    addi x7, x0, 2047
    011111111111 00000 000 00111 0010011 
    7FF00393